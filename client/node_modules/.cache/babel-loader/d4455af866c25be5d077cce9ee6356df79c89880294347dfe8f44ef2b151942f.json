{"ast":null,"code":"var _jsxFileName = \"/workspace/client/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminDashboard() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const usersRes = await axios.get(`${API_BASE_URL}/api/users`);\n        const apptRes = await axios.get(`${API_BASE_URL}/api/appointments`);\n        setUsers(usersRes.data);\n        setAppointments(apptRes.data);\n      } catch (err) {\n        setError('Failed to fetch admin data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading admin dashboard...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Registered Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" (\", user.email, \")\"]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appointments.map(appt => {\n        var _appt$user, _appt$doctor;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [((_appt$user = appt.user) === null || _appt$user === void 0 ? void 0 : _appt$user.name) || 'Unknown User', \" booked with Dr. \", ((_appt$doctor = appt.doctor) === null || _appt$doctor === void 0 ? void 0 : _appt$doctor.name) || 'Unknown Doctor', \" on \", new Date(appt.appointmentDate).toLocaleString()]\n        }, appt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"M0KxXJQaK5Irt4abuStbFcd947o=\");\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","API_BASE_URL","jsxDEV","_jsxDEV","AdminDashboard","_s","users","setUsers","appointments","setAppointments","loading","setLoading","error","setError","fetchData","usersRes","get","apptRes","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","user","name","email","_id","appt","_appt$user","_appt$doctor","doctor","Date","appointmentDate","toLocaleString","_c","$RefreshReg$"],"sources":["/workspace/client/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\n\nexport default function AdminDashboard() {\n  const [users, setUsers] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const usersRes = await axios.get(`${API_BASE_URL}/api/users`);\n        const apptRes = await axios.get(`${API_BASE_URL}/api/appointments`);\n        setUsers(usersRes.data);\n        setAppointments(apptRes.data);\n      } catch (err) {\n        setError('Failed to fetch admin data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (loading) return <div>Loading admin dashboard...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div>\n      <h2>Admin Dashboard</h2>\n      <h3>Registered Users</h3>\n      <ul>\n        {users.map(user => (\n          <li key={user._id}>{user.name} ({user.email})</li>\n        ))}\n      </ul>\n      <h3>All Appointments</h3>\n      <ul>\n        {appointments.map(appt => (\n          <li key={appt._id}>\n            {appt.user?.name || 'Unknown User'} booked with Dr. {appt.doctor?.name || 'Unknown Doctor'} on {new Date(appt.appointmentDate).toLocaleString()}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}