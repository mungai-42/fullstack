{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{API_BASE_URL}from'../config';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AdminDashboard(){const[users,setUsers]=useState([]);const[appointments,setAppointments]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');useEffect(()=>{const fetchData=async()=>{try{const usersRes=await axios.get(`${API_BASE_URL}/api/users`);const apptRes=await axios.get(`${API_BASE_URL}/api/appointments`);setUsers(usersRes.data);setAppointments(apptRes.data);}catch(err){setError('Failed to fetch admin data');}finally{setLoading(false);}};fetchData();},[]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading admin dashboard...\"});if(error)return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Registered Users\"}),/*#__PURE__*/_jsx(\"ul\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"li\",{children:[user.name,\" (\",user.email,\")\"]},user._id))}),/*#__PURE__*/_jsx(\"h3\",{children:\"All Appointments\"}),/*#__PURE__*/_jsx(\"ul\",{children:appointments.map(appt=>{var _appt$user,_appt$doctor;return/*#__PURE__*/_jsxs(\"li\",{children:[((_appt$user=appt.user)===null||_appt$user===void 0?void 0:_appt$user.name)||'Unknown User',\" booked with Dr. \",((_appt$doctor=appt.doctor)===null||_appt$doctor===void 0?void 0:_appt$doctor.name)||'Unknown Doctor',\" on \",new Date(appt.appointmentDate).toLocaleString()]},appt._id);})})]});}","map":{"version":3,"names":["React","useEffect","useState","axios","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","AdminDashboard","users","setUsers","appointments","setAppointments","loading","setLoading","error","setError","fetchData","usersRes","get","apptRes","data","err","children","className","map","user","name","email","_id","appt","_appt$user","_appt$doctor","doctor","Date","appointmentDate","toLocaleString"],"sources":["/workspace/client/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\n\nexport default function AdminDashboard() {\n  const [users, setUsers] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const usersRes = await axios.get(`${API_BASE_URL}/api/users`);\n        const apptRes = await axios.get(`${API_BASE_URL}/api/appointments`);\n        setUsers(usersRes.data);\n        setAppointments(apptRes.data);\n      } catch (err) {\n        setError('Failed to fetch admin data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (loading) return <div>Loading admin dashboard...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div>\n      <h2>Admin Dashboard</h2>\n      <h3>Registered Users</h3>\n      <ul>\n        {users.map(user => (\n          <li key={user._id}>{user.name} ({user.email})</li>\n        ))}\n      </ul>\n      <h3>All Appointments</h3>\n      <ul>\n        {appointments.map(appt => (\n          <li key={appt._id}>\n            {appt.user?.name || 'Unknown User'} booked with Dr. {appt.doctor?.name || 'Unknown Doctor'} on {new Date(appt.appointmentDate).toLocaleString()}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,YAAY,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzC,cAAe,SAAS,CAAAC,cAAcA,CAAA,CAAG,CACvC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACiB,GAAG,CAAC,GAAGhB,YAAY,YAAY,CAAC,CAC7D,KAAM,CAAAiB,OAAO,CAAG,KAAM,CAAAlB,KAAK,CAACiB,GAAG,CAAC,GAAGhB,YAAY,mBAAmB,CAAC,CACnEO,QAAQ,CAACQ,QAAQ,CAACG,IAAI,CAAC,CACvBT,eAAe,CAACQ,OAAO,CAACC,IAAI,CAAC,CAC/B,CAAE,MAAOC,GAAG,CAAE,CACZN,QAAQ,CAAC,4BAA4B,CAAC,CACxC,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CACDG,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIJ,OAAO,CAAE,mBAAOR,IAAA,QAAAkB,QAAA,CAAK,4BAA0B,CAAK,CAAC,CACzD,GAAIR,KAAK,CAAE,mBAAOV,IAAA,QAAKmB,SAAS,CAAC,OAAO,CAAAD,QAAA,CAAER,KAAK,CAAM,CAAC,CAEtD,mBACER,KAAA,QAAAgB,QAAA,eACElB,IAAA,OAAAkB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBlB,IAAA,OAAAkB,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBlB,IAAA,OAAAkB,QAAA,CACGd,KAAK,CAACgB,GAAG,CAACC,IAAI,eACbnB,KAAA,OAAAgB,QAAA,EAAoBG,IAAI,CAACC,IAAI,CAAC,IAAE,CAACD,IAAI,CAACE,KAAK,CAAC,GAAC,GAApCF,IAAI,CAACG,GAAmC,CAClD,CAAC,CACA,CAAC,cACLxB,IAAA,OAAAkB,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBlB,IAAA,OAAAkB,QAAA,CACGZ,YAAY,CAACc,GAAG,CAACK,IAAI,OAAAC,UAAA,CAAAC,YAAA,oBACpBzB,KAAA,OAAAgB,QAAA,EACG,EAAAQ,UAAA,CAAAD,IAAI,CAACJ,IAAI,UAAAK,UAAA,iBAATA,UAAA,CAAWJ,IAAI,GAAI,cAAc,CAAC,mBAAiB,CAAC,EAAAK,YAAA,CAAAF,IAAI,CAACG,MAAM,UAAAD,YAAA,iBAAXA,YAAA,CAAaL,IAAI,GAAI,gBAAgB,CAAC,MAAI,CAAC,GAAI,CAAAO,IAAI,CAACJ,IAAI,CAACK,eAAe,CAAC,CAACC,cAAc,CAAC,CAAC,GADxIN,IAAI,CAACD,GAEV,CAAC,EACN,CAAC,CACA,CAAC,EACF,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}